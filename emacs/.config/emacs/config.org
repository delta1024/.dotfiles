#+TITLE: My Emacs Config
#+AUTHOR: Jacob Stannix
* Table of Contents  :toc:
- [[#setup][Setup]]
  - [[#customel][custom.el]]
  - [[#startup-screen][startup screen]]
  - [[#transparent-emacs-frames-and-font][transparent emacs frames and font]]
- [[#packages-to-install][Packages to install]]
  - [[#install-all-selected-packages][Install all selected packages]]
- [[#org-mode-settings][Org-mode Settings]]
  - [[#org-superstar][Org Superstar]]
  - [[#org-toc][org toc]]
  - [[#org-agenda][Org Agenda]]
  - [[#capture-templates][Capture Templates]]
- [[#misc-settings][Misc Settings]]
  - [[#electric-pair-mode][Electric pair mode]]
  - [[#line-numbers][Line Numbers]]
  - [[#menubar-and-scrollbar][Menubar and scrollbar]]
  - [[#company][Company]]
  - [[#which-key][Which Key]]
  - [[#vertico][Vertico]]
  - [[#orderless][Orderless]]
  - [[#savehist-mode][Savehist Mode]]
  - [[#tuareg-mode][Tuareg mode]]
  - [[#autorevert-mode][Autorevert mode]]
  - [[#theme][theme]]
  - [[#doom-modeline][Doom modeline]]
  - [[#treesitter][Treesitter]]
- [[#eglot][Eglot]]
- [[#keymaps][Keymaps]]

* Setup
This may be pointless but I'm going to do it anyway.
#+begin_src elisp
  (setq user-emacs-directory (expand-file-name "emacs" "~/.config"))
  (add-to-list 'load-path (expand-file-name "lisp" "~/.config/emacs"))
#+end_src
** custom.el
#+begin_src elisp
  (setq custom-file (expand-file-name "custom.el" user-emacs-directory))
  (load custom-file)
#+end_src
** startup screen
#+begin_src elisp
  (setq inhibit-splash-screen 't)
#+end_src
** transparent emacs frames and font
#+begin_src elisp


  (dolist (param '('(alpha . (90 . 50))
		   '(font . "FiraCode Nerd Font-12")))
    (add-to-list 'default-frame-alist param))
  (set-frame-parameter (selected-frame) 'alpha '(90 . 50))
  (set-frame-parameter (selected-frame) 'font "FiraCode Nerd Font-11")

#+end_src

* Packages to install
To install a package use ~(add-to-list 'package-selected-packages 'package-symbol)~
#+begin_src elisp
  (require 'package)		
#+end_src

Add melpa to archives
#+begin_src elisp
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
  (package-initialize)
#+end_src

Add packages to list
#+begin_src elisp
  (add-to-list 'package-selected-packages 'toc-org)  
  (add-to-list 'package-selected-packages 'org-superstar)
  (add-to-list 'package-selected-packages 'which-key)
  (add-to-list 'package-selected-packages 'vertico)
  (add-to-list 'package-selected-packages 'orderless)
  (add-to-list 'package-selected-packages 'eglot)
  (add-to-list 'package-selected-packages 'lua-mode)
  (add-to-list 'package-selected-packages 'zig-mode)
  (add-to-list 'package-selected-packages 'magit)
  (add-to-list 'package-selected-packages 'company)
  (add-to-list 'package-selected-packages 'tree-sitter)
  (add-to-list 'package-selected-packages 'tree-sitter-langs)
  (add-to-list 'package-selected-packages 'doom-modeline)
  (add-to-list 'package-selected-packages 'doom-themes)
  (add-to-list 'package-selected-packages 'nerd-icons)
  (add-to-list 'package-selected-packages 'merlin-iedit)
  (add-to-list 'package-selected-packages 'merlin-company)
  (add-to-list 'package-selected-packages 'merlin-ac)

#+end_src

** Install all selected packages
#+begin_src emacs-lisp
  ;; (package-refresh-contents)
  (package-install-selected-packages :noconfirm)
#+end_src

* TODO Org-mode Settings
** Org Superstar
#+begin_src elisp
  (add-hook 'org-mode-hook (lambda () (org-superstar-mode 1)))
  (customize-set-variable 'org-hide-leading-stars 't)
#+end_src
** org toc
#+begin_src elisp
  (add-hook 'org-mode-hook (lambda () (toc-org-mode 1)))
#+end_src
** Org Agenda
#+begin_src elisp
  (customize-set-variable 'org-directory "~/Org")
  (customize-set-variable 'org-agenda-files  '("~/Org/agenda/"))
#+end_src
** Capture Templates
#+begin_src elisp
  (customize-set-variable  'org-capture-templates
	 '(("w" "Add Shift" entry (file "agenda/Work.org")
	    "* Shift \nSCHEDULED: %^{Hours}T")
	   ("t" "Add Task" entry (file "agenda/Tasks.org")
	    "* TODO %?")))
#+end_src
* Misc Settings
** Electric pair mode
Audo close parens, braces, quotes, etc...
#+begin_src elisp
  (electric-pair-mode 't)
#+end_src 
** Line Numbers
#+begin_src elisp
 (customize-set-variable display-line-numbers 'relative)
#+end_src
** Menubar and scrollbar
Remove menu bar and scroll bar (who needs a mouse anyway)
#+begin_src elisp
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
#+end_src
** Company
#+begin_src elisp
  (add-hook 'after-init-hook 'global-company-mode)
#+end_src
** Which Key
#+begin_src elisp
  (require 'which-key)
  (which-key-mode)
#+end_src
** Vertico
#+begin_src elisp
  (vertico-mode)
#+end_src
** Orderless
#+begin_src elisp
  (setq  completion-styles '(orderless basic)
	 completion-category-defaults nil
	 completion-category-overrides '((file (styles partial-completion))))

#+end_src

** Savehist Mode
#+begin_src elisp
  (savehist-mode)
#+end_src

** Tuareg mode
Add opam load path to emacs
#+begin_src elisp
  (let ((opam-share (car (process-lines "opam" "var" "share")))
	(opam-bin (car (process-lines "opam" "var" "bin"))))
    (add-to-list 'load-path (concat opam-share "/emacs/site-lisp"))
    (add-to-list 'exec-path opam-share)
    (setq merlin-command (concat opam-bin "/ocamlmerlin"))
    (autoload 'merlin-mode "merlin" "Merlin mode" t)
    (add-hook 'tuareg-mode-hook #'merlin-mode))
  (require 'merlin-iedit)
  (require 'merlin-company)
  (require 'merlin-ac)
#+end_src
** Autorevert mode
#+begin_src elisp
  (global-auto-revert-mode 1)
#+end_src
** theme
#+begin_src elisp
  (load-theme 'doom-one 't)
#+end_src
** Doom modeline
#+begin_src elisp
  (require 'doom-modeline)
  (doom-modeline-mode 1)
#+end_src
** Treesitter
#+begin_src elisp
  (require 'tree-sitter)
  (require 'tree-sitter-langs)
  (global-tree-sitter-mode)
#+end_src
* TODO Eglot
* TODO Keymaps
#+begin_src elisp 
  (define-prefix-command 'my/leader-key)
  (global-set-key (kbd "C-c C-g") #'my/leader-key)
  
  (define-key my/leader-key "a" #'org-agenda)
  (define-key my/leader-key "c" #'org-capture)
#+end_src
